// Generated by gencpp from file naoqi_msgs/MemoryList.msg
// DO NOT EDIT!


#ifndef NAOQI_MSGS_MESSAGE_MEMORYLIST_H
#define NAOQI_MSGS_MESSAGE_MEMORYLIST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <naoqi_msgs/MemoryPairString.h>
#include <naoqi_msgs/MemoryPairInt.h>
#include <naoqi_msgs/MemoryPairFloat.h>

namespace naoqi_msgs
{
template <class ContainerAllocator>
struct MemoryList_
{
  typedef MemoryList_<ContainerAllocator> Type;

  MemoryList_()
    : strings()
    , ints()
    , floats()  {
    }
  MemoryList_(const ContainerAllocator& _alloc)
    : strings(_alloc)
    , ints(_alloc)
    , floats(_alloc)  {
    }



   typedef std::vector< ::naoqi_msgs::MemoryPairString_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::naoqi_msgs::MemoryPairString_<ContainerAllocator> >::other >  _strings_type;
  _strings_type strings;

   typedef std::vector< ::naoqi_msgs::MemoryPairInt_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::naoqi_msgs::MemoryPairInt_<ContainerAllocator> >::other >  _ints_type;
  _ints_type ints;

   typedef std::vector< ::naoqi_msgs::MemoryPairFloat_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::naoqi_msgs::MemoryPairFloat_<ContainerAllocator> >::other >  _floats_type;
  _floats_type floats;




  typedef boost::shared_ptr< ::naoqi_msgs::MemoryList_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::naoqi_msgs::MemoryList_<ContainerAllocator> const> ConstPtr;

}; // struct MemoryList_

typedef ::naoqi_msgs::MemoryList_<std::allocator<void> > MemoryList;

typedef boost::shared_ptr< ::naoqi_msgs::MemoryList > MemoryListPtr;
typedef boost::shared_ptr< ::naoqi_msgs::MemoryList const> MemoryListConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::naoqi_msgs::MemoryList_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::naoqi_msgs::MemoryList_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace naoqi_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/indigo/share/nav_msgs/cmake/../msg'], 'trajectory_msgs': ['/opt/ros/indigo/share/trajectory_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'naoqi_msgs': ['/home/sambrose/work/master/alrosconverter/msg/naoqi_msgs/msg', '/home/sambrose/work/master/alrosconverter/msg/devel/share/naoqi_msgs/msg'], 'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::naoqi_msgs::MemoryList_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::naoqi_msgs::MemoryList_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::naoqi_msgs::MemoryList_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
{
  static const char* value()
  {
    return "fe0a2aaef61e1630206223188f8bd854";
  }

  static const char* value(const ::naoqi_msgs::MemoryList_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xfe0a2aaef61e1630ULL;
  static const uint64_t static_value2 = 0x206223188f8bd854ULL;
};

template<class ContainerAllocator>
struct DataType< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
{
  static const char* value()
  {
    return "naoqi_msgs/MemoryList";
  }

  static const char* value(const ::naoqi_msgs::MemoryList_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
{
  static const char* value()
  {
    return "MemoryPairString[] strings\n\
MemoryPairInt[] ints\n\
MemoryPairFloat[] floats\n\
================================================================================\n\
MSG: naoqi_msgs/MemoryPairString\n\
string memoryKey\n\
string data\n\
================================================================================\n\
MSG: naoqi_msgs/MemoryPairInt\n\
string memoryKey\n\
int32 data\n\
================================================================================\n\
MSG: naoqi_msgs/MemoryPairFloat\n\
string memoryKey\n\
float32 data\n\
";
  }

  static const char* value(const ::naoqi_msgs::MemoryList_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.strings);
      stream.next(m.ints);
      stream.next(m.floats);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER;
  }; // struct MemoryList_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::naoqi_msgs::MemoryList_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::naoqi_msgs::MemoryList_<ContainerAllocator>& v)
  {
    s << indent << "strings[]" << std::endl;
    for (size_t i = 0; i < v.strings.size(); ++i)
    {
      s << indent << "  strings[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::naoqi_msgs::MemoryPairString_<ContainerAllocator> >::stream(s, indent + "    ", v.strings[i]);
    }
    s << indent << "ints[]" << std::endl;
    for (size_t i = 0; i < v.ints.size(); ++i)
    {
      s << indent << "  ints[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::naoqi_msgs::MemoryPairInt_<ContainerAllocator> >::stream(s, indent + "    ", v.ints[i]);
    }
    s << indent << "floats[]" << std::endl;
    for (size_t i = 0; i < v.floats.size(); ++i)
    {
      s << indent << "  floats[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::naoqi_msgs::MemoryPairFloat_<ContainerAllocator> >::stream(s, indent + "    ", v.floats[i]);
    }
  }
};

} // namespace message_operations
} // namespace ros

#endif // NAOQI_MSGS_MESSAGE_MEMORYLIST_H
